<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  The ASF licenses this file to You
  under the Apache License, Version 2.0 (the "License"); you may not
  use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.  For additional information regarding
  copyright in this work, please see the NOTICE file in the top level
  directory of this distribution.

  Source file modified from the original ASF source; all changes made
  are also under Apache License.
-->
<beans:beans xmlns="http://www.springframework.org/schema/security"
       xmlns:beans="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
          http://www.springframework.org/schema/security
          http://www.springframework.org/schema/security/spring-security-4.0.xsd">

    <http pattern="/images/**" security="none"/>
    <http pattern="/scripts/**" security="none"/>
    <http pattern="/styles/**" security="none"/>

    <http use-expressions="false" auto-config="false" access-decision-manager-ref="accessDecisionManager">
        <intercept-url pattern="/tb-ui/login-redirect**" access="ADMIN,BLOGGER"/>
        <intercept-url pattern="/tb-ui/profile**" access="ADMIN,BLOGGER"/>
        <intercept-url pattern="/tb-ui/createWeblog**" access="ADMIN,BLOGGER"/>
        <intercept-url pattern="/tb-ui/menu**" access="ADMIN,BLOGGER"/>
        <intercept-url pattern="/tb-ui/authoring/**" access="ADMIN,BLOGGER"/>
        <intercept-url pattern="/tb-ui/admin/**" access="ADMIN"/>
        <intercept-url pattern="/rewrite-status*" access="ADMIN"/>

        <!-- CSRF presently handled manually via Roller's salt filters -->
        <csrf disabled="true"/>

        <!-- Needed to allow for popups -->
        <headers>
            <frame-options policy="SAMEORIGIN"/>
        </headers>

        <form-login login-page="/tb-ui/login.rol"
                    authentication-failure-url="/tb-ui/login.rol?error=true"
                    login-processing-url="/roller_j_security_check"/>

        <remember-me user-service-ref="rollerUserService"
                     key="715F2448-3176-11DD-ABC6-9CD955D89593"/>

    </http>

    <beans:bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
        <beans:constructor-arg ref="roleVoter"/>
        <beans:property name="allowIfAllAbstainDecisions" value="false"/>
    </beans:bean>

    <beans:bean id="roleVoter" class="org.springframework.security.access.vote.RoleVoter">
        <beans:property name="rolePrefix" value=""/>
    </beans:bean>

    <!-- Read users from Roller API -->
    <authentication-manager alias='rollerAuthenticationManager'>
        <authentication-provider ref="rememberMeAuthenticationProvider"/>
        <!-- Uncomment one of the two below, based on whether database or LDAP
             authentication is desired. -->
        <authentication-provider user-service-ref="rollerUserService"/>
        <!--authentication-provider ref="ldapAuthProvider"/-->
    </authentication-manager>

    <beans:bean id="rollerUserService" class="org.apache.roller.weblogger.ui.core.security.RollerUserDetailsService">
        <beans:property name="userManager" ref="userManager"/>
    </beans:bean>

    <beans:bean id="rememberMeAuthenticationProvider"
                class="org.springframework.security.authentication.RememberMeAuthenticationProvider">
        <beans:constructor-arg value="springRocks"/>
    </beans:bean>

    <!-- Uncomment & customize below beans if using LDAP -->
    <!--beans:bean id="contextSource" class="org.springframework.security.ldap.DefaultSpringSecurityContextSource">
        <beans:constructor-arg value="ldap://localhost:10389/dc=example,dc=com" />
        <beans:property name="userDn" value="uid=admin,ou=system" />
        <beans:property name="password" value="secret" />
    </beans:bean>

    <beans:bean id="ldapAuthProvider"
                class="org.springframework.security.ldap.authentication.LdapAuthenticationProvider">

        <beans:constructor-arg>
            <beans:bean class="org.springframework.security.ldap.authentication.BindAuthenticator">
                <beans:constructor-arg ref="contextSource" />
                <beans:property name="userSearch" ref="userSearch" />
            </beans:bean>
        </beans:constructor-arg>
        <beans:constructor-arg>
            <beans:bean class="org.apache.roller.weblogger.ui.core.security.AuthoritiesPopulator">
                <beans:property name="userManager" ref="userManager"/>
            </beans:bean>
        </beans:constructor-arg>
    </beans:bean>

    <beans:bean id="userSearch" class="org.springframework.security.ldap.search.FilterBasedLdapUserSearch">
        <beans:constructor-arg index="0" value="" />
        <beans:constructor-arg index="1" value="(uid={0})" />
        <beans:constructor-arg index="2" ref="contextSource" />
        <beans:property name="searchSubtree" value="true" />
    </beans:bean-->

</beans:beans>
