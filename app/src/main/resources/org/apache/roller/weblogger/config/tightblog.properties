# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  The ASF licenses this file to You
# under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.  For additional information regarding
# copyright in this work, please see the NOTICE file in the top level
# directory of this distribution.
#
# Source file modified from the original ASF source; all changes made
# are also under Apache License.
#
# tightblog.properties
#
# This file is for meant for TightBlog deployment properties
# Properties that aren't changeable during runtime are defined here
#
# You can override the values in this file in a couple ways ..
#   1. define a tightblog-custom.properties file and place it somewhere
#       at the root of one of your classpath locations.
#       for example:
#           $TOMCAT_HOME/lib
#           $ROLLER_LOCATION/WEB-INF/classes
#
#   2. specify a custom properties file via jvm option
#       example:
#           tightblog.custom.config=/path/to/properties/file
#
#   **NOTE: if you run multiple instances of TightBlog on the same server
#           then you should beware of the fact that the override options above
#           may affect *all* of your running instances.  if you want to do
#           custom overrides for each instance then you must do it by
#           placing a tightblog-custom.properties file at WEB-INF/classes/ in
#           each of your TightBlog installations.
#

#---------------------------------
# Database configuration settings
#---------------------------------

# Installation type 'auto' or 'manual'
# - Set to 'auto' if you'd like tables to be auto-created if they are not found
#   on startup and auto-upgraded if they need it.
# - Set to 'manual' if you'd want to run the SQL scripts by hand.
installation.type=manual

# Specify database configuration type of 'jndi' or 'jdbc'
database.configurationType=jndi

# For database configuration type 'jndi',this will be used.
# If it does not start 'java:' then 'java:comp/env/' will be prepended
database.jndi.name=jdbc/tightblogdb

# For database configuration type of 'jdbc', you MUST override these
database.jdbc.driverClass=
database.jdbc.connectionURL=
database.jdbc.username=
database.jdbc.password=

#-----------------------------------
# Mail server connection parameters
#-----------------------------------

# Specify mail configuration type of 'jndi' or 'properties'
mail.configurationType=jndi

# For mail configuration type 'jndi', this will be used
mail.jndi.name=mail/Session

# For mail configuration type of 'properties', you MUST override hostname
mail.hostname=

# Only override mail username and password if your mail server requires them
#mail.username=
#mail.password=

#-----------------------------------------------------------------------------
# Directory settings
#-----------------------------------------------------------------------------

# The directory in which TightBlog will upload files
mediafiles.storage.dir=${user.home}/tightblog_data/mediafiles

# Directory in which search index is to be created
# (delete this directory to force TightBlog to recreate the entire search index)
search.index.dir=${user.home}/tightblog_data/search-index

# The directory in which TightBlog will look for themes
themes.dir=${webapp.context}

#-----------------------------------------------------------------------------
# Feature specific settings
#-----------------------------------------------------------------------------

# True to enable group blogging. False to prevent users from creating more 
# than one weblog and from joining other weblogs.
groupblogging.enabled=true

#----------------------------------
# Planet Aggregator settings
#----------------------------------

# Set to true to enable the Planet aggregator.
planet.aggregator.enabled=true

# Planet Cache directory - See DiskFeedInfoCache
planet.aggregator.cache.dir=${user.home}/tightblog_data/planet-cache

#-----------------------------------------------------------------------------
# User management and security settings
#-----------------------------------------------------------------------------

# Top-level authentication declaration for TightBlog.
# Must be either of the following values:
# db:  use Tightblog database to store usernames and passwords
# ldap: use external LDAP to authenticate (must configure Tightblog security.xml,
#       see Roller Wiki for more details)
# Note that if you override this value in your tightblog-custom.properties file, you will also
# need to re-configure the security.xml file in the Tightblog WAR (under WEB-INF) to use the
# new security method (or in the tightblog-custom.xml override file) -- check the comments
# in the security.xml file for instructions on how to do so.
# Also see bottom of web.xml for SSL setup information.
authentication.method=db

# Empty value used for passphrase in weblogger_user table when LDAP used
users.passwords.externalAuthValue=<externalAuth>

# Password security settings
passwds.encryption.enabled=true
passwds.encryption.algorithm=SHA

#-----------------------------------------------------------------------------
# Weblog ping system
#-----------------------------------------------------------------------------

# The set of initial common ping targets.  This is used to initialize the database
# if there are not already common ping targets defined there.  Ping targets
# are specified as a comma-separated list, each target in the form {{name}{url}}.
# To disable initialization of common ping targets set it to the empty value.
# Common targets can be also be configured in the UI; this is just used
# to set up some typical ones.
pings.initialCommonTargets=\
{{Ping-O-Matic}{http://rpc.pingomatic.com/}}\
,{{Google Blog Search}{http://blogsearch.google.com/ping/RPC2}}\
,{{Weblogs.com}{http://rpc.weblogs.com/RPC2}}

# This controls whether the Weblog:Pings menu item and its associated actions
# are enabled.  Set this to false to disallow users from configuring autopings 
# and doing manual pings.
# NOTE: There is a separate runtime property (configurable from the
# Admin:Configuration page) that can be used to suspend and restart ping processing
# during runtime without shutting down the application.
#
# CAUTION: Setting this to true will cause the server to remove all users' 
# existing autoping configurations on startup. Leave this false or commented 
# for normal behavior.
pings.disablePingUsage=false

#-----------------------------------------------------------------------------
# Editor plugins
#-----------------------------------------------------------------------------

# The default editor for new blogs (may be changed by user in blog settings)
# Valid values: editor-text.jsp,  editor-xinha.jsp
plugins.defaultEditor=editor-text.jsp

#-----------------------------------------------------------------------------
# Other settings
#-----------------------------------------------------------------------------

# populated by Maven during build
weblogger.version=${project.version}
weblogger.revision=${buildNumber}

# specifies the max number of tags allowed in URL ( /feed?tags=foo+bar+baz )
tags.queries.maxIntersectionSize=3

# Characters to be allowed in user names (change at your own risk)
username.allowedChars=A-Za-z0-9

# editor theme to be used (corresponds to directory name under /theme)
editor.theme=tan

# list of links to include in root bookmark folder of each new blog
# format is like so: linktitle2|linkurl2,linktitle2|linkurl2,linktitle3|linkurl3
newuser.blogroll=\
Apache Software Foundation|http://apache.org,\
TightBlog|https://github.com/gmazza/tightblog

# comma-separated list of top-level categories to be created in each new weblog
newuser.categories=Technology,Finance,General

# these properties are needed to run Roller on JBoss with Hibernate JPA
# hibernate.transaction.factory_class=org.hibernate.transaction.JTATransactionFactory
# hibernate.transaction.manager_lookup_class=org.hibernate.transaction.JBossTransactionManagerLookup

# EclipseLink JPA properties
eclipselink.persistence-context.flush-mode=auto

# To override the calculated root URL for the application (see InitFilter), good
# if using https:// or proxying, etc.
# provide to just before the first "/" after hostname
#site.absoluteurl=
