#**
 510-to-520-migration.vm: Velocity template that generates vendor-specific database scripts

 DON'T RUN THIS, IT'S NOT A DATABASE CREATION SCRIPT!!!
**#

-- Roles consolidated into the roller_user table.
#addColumnNull("roller_user" "role"  "varchar(16)")

-- images removed from categories
#dropColumn('weblogcategory' 'image')

-- roller_permission revamped to user_weblog_role
#dropColumn('roller_permission', 'objecttype')
#renameColumn('roller_permission', 'objectid', 'weblogid', 'varchar(48)')
#renameColumn('roller_permission', 'actions', 'weblog_role', 'varchar(48)')
#renameTable('roller_permission', 'user_weblog_role')

-- switch websiteid columns to weblogid
#renameColumn('autoping', 'websiteid', 'weblogid', 'varchar(48) not null')
#renameColumn('weblog_custom_template', 'websiteid', 'weblogid', 'varchar(48) not null')
#renameColumn('weblog_category', 'websiteid', 'weblogid', 'varchar(48) not null')
#renameColumn('weblogentry', 'websiteid', 'weblogid', 'varchar(48) not null')
#renameColumn('roller_weblogentrytag', 'websiteid', 'weblogid', 'varchar(48) not null')
#renameColumn('roller_weblogentrytagagg', 'websiteid', 'weblogid', 'varchar(48) not null')
#renameColumn('roller_weblogentrytag', 'websiteid', 'weblogid', 'varchar(48) not null')
#renameColumn('roller_mediafiledir', 'websiteid', 'weblogid', 'varchar(48) not null')

-- AtomPub gone

#dropTableIfExists("roller_oauthconsumer")
#dropTableIfExists("roller_oauthaccessor")

-- Pinging now handled in-memory

#dropTableIfExists("pingqueueentry")

-- Task scheduling now handled by Spring (see spring.xml)

#dropTableIfExists("roller_tasklock")


-- bookmark folders removed

#dropForeignKey("bookmark" "bm_folderid_fk")
#dropIndex("bookmark", "bm_folderid_idx")
#dropColumn("bookmark", "feedurl")
#dropColumn("bookmark", "image")
#addColumnNull("bookmark" "weblogid" "varchar48")
update bookmark bm set weblogid = select websiteid from bookmark_folder bf where bf.id = bm.folderid;

#dropColumn("bookmark", "folderid")
#dropTableIfExists("bookmark_folder")
alter table bookmark add constraint bm_weblogid_fk foreign key ( weblogid ) references weblog( id ) ;

-- entry attributes moved into weblogentry table

#dropColumn("weblogentry", "content_type")
#dropColumn("weblogentry", "content_src")
#addColumnNull("weblogentry" "enclosure_url" "varchar(255)")
#addColumnNull("weblogentry" "enclosure_type" "varchar(48)")
#addColumnNull("weblogentry" "enclosure_length" "integer")

update weblogentry we set enclosure_url =
(select value from entryattribute where name = "att_mediacast_url" and entryid = we.id)
where we.id in
(select entryid from entryattribute where name = "att_mediacast_url")

update weblogentry we set enclosure_type =
(select value from entryattribute where name = "att_mediacast_type" and entryid = we.id)
where we.id in
(select entryid from entryattribute where name = "att_mediacast_type")

update weblogentry we set enclosure_length =
(select value from entryattribute where name = "att_mediacast_length" and entryid = we.id)
where we.id in
(select entryid from entryattribute where name = "att_mediacast_length")


-- Set new global roles from the now-unused userrole table:
update roller_user ru
set role = 'BLOGGER'
where ru.username in (select ur.username
from userrole ur
where role = 'editor');

update roller_user ru
set role = 'ADMIN'
where ru.username in (select ur.username
from userrole ur
where role = 'admin');

-- Update the weblog roles to the new terminology
update user_weblog_role
set actions = 'OWNER'
where actions = 'admin'

update user_weblog_role
set actions = 'POST'
where actions = 'post'

update user_weblog_role
set actions = 'EDIT_DRAFT'
where actions = 'edit_draft'

-- Roller_Hitcounts moved into Weblog table

#addColumnNotNull("weblog" "hitstoday"  "integer")
#dropTable('roller_hitcounts')


-- planet changes
insert into roller_properties select * from rag_properties;
#dropTable('rag_properties')
#dropTable('rag_entry')
#dropTable('rag_group_subscription')
#dropTable('rag_subscription')
#dropTable('rag_group')
#dropTable('rag_planet')

create table planet (
    id               varchar(48) not null primary key,
    handle           varchar(32) not null,
    title            varchar(255) not null,
    description      varchar(255),
    max_page_entries integer default 30,
    max_feed_entries integer default 30,
    cat_restriction  $db.TEXT_SQL_TYPE,
    group_page       varchar(255)
);
alter table planet add constraint planet_handle_uq unique (handle);

create table planet_subscription (
    id               varchar(48) not null primary key,
    planetid         varchar(48) not null,
    title            varchar(255) not null,
    feed_url         varchar(255) not null,
    site_url         varchar(255),
    author           varchar(255),
    last_updated     $db.TIMESTAMP_SQL_TYPE,
    inbound_links    integer default -1,
    inbound_blogs    integer default -1
);
alter table planet_subscription add constraint plsb_feed_url_uq unique (planetid, feed_url);
create index plnt_subs_idx on planet_subscription(planetid);

alter table planet_subscription add constraint ps_planetid_fk
    foreign key (planetid) references planet(id);

create table planet_subscription_entry (
    id               varchar(48) not null primary key,
    subscription_id  varchar(48) not null,
    handle           varchar(255),
    title            varchar(255),
    guid             varchar(255),
    permalink        $db.TEXT_SQL_TYPE not null,
    author           varchar(255),
    content          $db.TEXT_SQL_TYPE,
    categories       $db.TEXT_SQL_TYPE,
    published        $db.TIMESTAMP_SQL_TYPE not null,
    updated          $db.TIMESTAMP_SQL_TYPE
);
create index plntsbent_sid_idx on planet_subscription_entry(subscription_id);

alter table planet_subscription_entry add constraint pse_subscriptionid_fk
    foreign key (subscription_id) references planet_subscription(id);


-- Expanding datetime or timestamp columns
-- Affects only for MySQL, Oracle, PostgreSQL

#**
 PostgreSQL respects original not null attribute.
 **#
#macro(expandTimestamp $tableName $columnName)
#if($db.DBTYPE == "MYSQL")
#alterColumnType($tableName $columnName 'datetime(3)')
#elseif ($db.DBTYPE == "ORACLE")
#alterColumnType($tableName $columnName 'timestamp(3)')
#elseif ($db.DBTYPE == "POSTGRESQL")
#alterColumnType($tableName $columnName 'timestamp(3) with time zone')
#end
#end

#macro(expandTimestampNotNull $tableName $columnName)
#if($db.DBTYPE == "MYSQL")
#alterColumnType($tableName $columnName 'datetime(3) not null')
#elseif ($db.DBTYPE == "ORACLE")
#alterColumnType($tableName $columnName 'timestamp(3) not null')
#elseif ($db.DBTYPE == "POSTGRESQL")
#alterColumnType($tableName $columnName 'timestamp(3) with time zone')
#end
#end

#expandTimestamp('pingtarget' 'lastsuccess')
#expandTimestampNotNull('roller_comment' 'posttime')
#expandTimestampNotNull('roller_mediafile' 'date_uploaded')
#expandTimestamp('roller_mediafile' 'last_updated')
#expandTimestampNotNull('user_weblog_role' 'datecreated')
#expandTimestampNotNull('roller_user' 'datecreated')
#expandTimestampNotNull('roller_weblogentrytag' 'time')
#expandTimestampNotNull('roller_weblogentrytagagg' 'lastused')
#expandTimestampNotNull('weblog' 'datecreated')
#expandTimestamp('weblog' 'lastmodified')
#expandTimestampNotNull('weblog_custom_template' 'updatetime')
#expandTimestamp('weblogentry' 'pubtime')
#expandTimestampNotNull('weblogentry' 'updatetime')
