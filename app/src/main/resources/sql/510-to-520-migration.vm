#**
 510-to-520-migration.vm: Velocity template that generates vendor-specific database scripts

 DON'T RUN THIS, IT'S NOT A DATABASE CREATION SCRIPT!!!
**#

-- Roles consolidated into the roller_user table.
#addColumnNull("roller_user" "role"  "varchar(16)")

-- images removed from categories
#dropColumn('weblogcategory' 'image')

-- roller_permission revamped to user_weblog_role
#dropColumn('roller_permission', 'objecttype')
#renameColumn('roller_permission', 'objectid', 'weblogid', 'varchar(48)')
#renameColumn('roller_permission', 'actions', 'weblog_role', 'varchar(48)')
#renameTable('roller_permission', 'user_weblog_role')

-- switch websiteid columns to weblogid
#renameColumn('autoping', 'websiteid', 'weblogid', 'varchar(48) not null')
#renameColumn('pingqueueentry', 'websiteid', 'weblogid', 'varchar(48) not null')
#renameColumn('weblog_custom_template', 'websiteid', 'weblogid', 'varchar(48) not null')
#renameColumn('weblog_category', 'websiteid', 'weblogid', 'varchar(48) not null')
#renameColumn('weblogentry', 'websiteid', 'weblogid', 'varchar(48) not null')
#renameColumn('roller_weblogentrytag', 'websiteid', 'weblogid', 'varchar(48) not null')
#renameColumn('roller_weblogentrytagagg', 'websiteid', 'weblogid', 'varchar(48) not null')

-- bookmark folders removed

#dropForeignKey("bookmark" "bm_folderid_fk")
#dropIndex("bookmark", "bm_folderid_idx")
#dropColumn("bookmark", "feedurl")
#addColumnNull("bookmark" "weblogid" "varchar48")
update bookmark bm set weblogid = select websiteid from bookmark_folder bf where bf.id = bm.folderid;

#dropColumn("bookmark", "folderid")
#dropTableIfExists("bookmark_folder")
alter table bookmark add constraint bm_weblogid_fk foreign key ( weblogid ) references weblog( id ) ;

-- entry attributes moved into weblogentry table

#dropColumn("weblogentry", "content_type")
#dropColumn("weblogentry", "content_src")
#addColumnNull("weblogentry" "enclosure_url" "varchar(255)")
#addColumnNull("weblogentry" "enclosure_type" "varchar(48)")
#addColumnNull("weblogentry" "enclosure_length" "integer")

update weblogentry we set enclosure_url =
(select value from entryattribute where name = "att_mediacast_url" and entryid = we.id)
where we.id in
(select entryid from entryattribute where name = "att_mediacast_url")

update weblogentry we set enclosure_type =
(select value from entryattribute where name = "att_mediacast_type" and entryid = we.id)
where we.id in
(select entryid from entryattribute where name = "att_mediacast_type")

update weblogentry we set enclosure_length =
(select value from entryattribute where name = "att_mediacast_length" and entryid = we.id)
where we.id in
(select entryid from entryattribute where name = "att_mediacast_length")


-- Set new global roles from the now-unused userrole table:
update roller_user ru
set role = 'BLOGGER'
where ru.username in (select ur.username
from userrole ur
where role = 'editor');

update roller_user ru
set role = 'ADMIN'
where ru.username in (select ur.username
from userrole ur
where role = 'admin');

-- Update the weblog roles to the new terminology
update user_weblog_role
set actions = 'OWNER'
where actions = 'admin'

update user_weblog_role
set actions = 'POST'
where actions = 'post'

update user_weblog_role
set actions = 'EDIT_DRAFT'
where actions = 'edit_draft'

#**
 PostgreSQL respects original not null attribute.
 **#
#macro(expandTimestamp $tableName $columnName)
#if($db.DBTYPE == "MYSQL")
#alterColumnType($tableName $columnName 'datetime(3)')
#elseif ($db.DBTYPE == "ORACLE")
#alterColumnType($tableName $columnName 'timestamp(3)')
#elseif ($db.DBTYPE == "POSTGRESQL")
#alterColumnType($tableName $columnName 'timestamp(3) with time zone')
#end
#end

#macro(expandTimestampNotNull $tableName $columnName)
#if($db.DBTYPE == "MYSQL")
#alterColumnType($tableName $columnName 'datetime(3) not null')
#elseif ($db.DBTYPE == "ORACLE")
#alterColumnType($tableName $columnName 'timestamp(3) not null')
#elseif ($db.DBTYPE == "POSTGRESQL")
#alterColumnType($tableName $columnName 'timestamp(3) with time zone')
#end
#end

-- rag_ tables renamed to planet_
#renameTable('rag_planet', 'planet')
#renameTable('rag_group', 'planet_group')
#renameTable('rag_subscription', 'planet_subscription')
#renameTable('rag_group_subscription', 'planet_group_subscription')
#renameTable('rag_entry', 'planet_subscription_entry')

insert into roller_properties select * from rag_properties;
#dropTable('rag_properties')

-- Expanding datetime or timestamp columns
-- Affects only for MySQL, Oracle, PostgreSQL

#expandTimestampNotNull('pingqueueentry' 'entrytime')
#expandTimestamp('pingtarget' 'lastsuccess')
#expandTimestampNotNull('planet_subscription_entry' 'published')
#expandTimestamp('planet_subscription_entry' 'updated')
#expandTimestamp('planet_subscription' 'last_updated')
#expandTimestampNotNull('roller_comment' 'posttime')
#expandTimestampNotNull('roller_mediafile' 'date_uploaded')
#expandTimestamp('roller_mediafile' 'last_updated')
#expandTimestampNotNull('roller_oauthaccessor' 'created')
#expandTimestampNotNull('roller_oauthaccessor' 'updated')
#expandTimestampNotNull('user_weblog_role' 'datecreated')
#expandTimestamp('roller_tasklock' 'timeacquired')
#expandTimestamp('roller_tasklock' 'lastrun')
#expandTimestampNotNull('roller_user' 'datecreated')
#expandTimestampNotNull('roller_weblogentrytag' 'time')
#expandTimestampNotNull('roller_weblogentrytagagg' 'lastused')
#expandTimestampNotNull('weblog' 'datecreated')
#expandTimestamp('weblog' 'lastmodified')
#expandTimestampNotNull('weblog_custom_template' 'updatetime')
#expandTimestamp('weblogentry' 'pubtime')
#expandTimestampNotNull('weblogentry' 'updatetime')
