#**
 510-to-520-migration.vm: Velocity template that generates vendor-specific database scripts

 DON'T RUN THIS, IT'S NOT A DATABASE CREATION SCRIPT!!!
**#

-- table renames
#renameTable("roller_user", "weblogger_user")
#renameTable("autoping", "weblog_ping_target")
#renameTable("bookmark", "blogroll_link")
#renameTable("pingtarget", "ping_target")
#renameTable("roller_comment", "weblog_entry_comment")
#renameTable("roller_mediafile", "media_file")
#renameTable("roller_mediafiledir", "media_directory")
#renameTable("roller_properties", "weblogger_properties")
#renameTable("roller_user", "weblogger_user")
#renameTable("weblogcategory", "weblog_category")
#renameTable("weblog_custom_template", "weblog_template")
#renameTable("custom_template_rendition", "weblog_template_rendition")
#renameTable("roller_weblogentrytag", "weblog_entry_tag")
#renameTable("roller_permission", "user_weblog_role")

-- Roles consolidated into the weblogger_user table.
#addColumnNull("weblogger_user" "role"  "varchar(16)")

-- description and image removed from categories
#dropColumn("weblog_category", "description")
#dropColumn("weblog_category" "image")

-- ping target condition codes no longer stored
#dropColumn("ping_target" "conditioncode")

-- user_weblog_role (old roller_permission) revamped
#dropColumn("user_weblog_role", "objecttype")
#renameColumn("user_weblog_role", "objectid", "weblogid", "varchar(48)")
#renameColumn("user_weblog_role", "actions", "weblog_role", "varchar(48)")

update user_weblog_role uwr set weblogid = (select id
from weblog w where w.handle = uwr.weblogid)

alter table user_weblog_role add constraint uwr_weblogid_fk
    foreign key ( weblogid ) references weblog( id ) ;

alter table user_weblog_role add constraint uwr_userid_fk
    foreign key ( username ) references weblogger_user( username ) ;

-- weblog entry tag changes
#dropIndex("weblog_entry_tag" "wet_entryid_idx")
#dropIndex("weblog_entry_tag" "wet_weblogid_idx")
#dropIndex("weblog_entry_tag" "wet_creator_idx")
#dropIndex("weblog_entry_tag" "wet_name_idx")
#dropColumn("weblog_entry_tag", "creator")
#dropColumn("weblog_entry_tag", "time")

create index wtag_tagsearch_idx on weblog_entry_tag( weblogid, name, entryid );

-- roller_weblogentrytagagg replaced by a view

#dropTableIfExists("roller_weblogentrytagagg")

create view weblog_entry_tag_agg as
select weblogid, name, count(*) as total
from weblog_entry_tag
group by weblogid, name;

-- switch websiteid columns to weblogid
#renameColumn("weblog_ping_target", "websiteid", "weblogid", "varchar(48) not null")
#renameColumn("weblog_template", "websiteid", "weblogid", "varchar(48) not null")
#renameColumn("weblog_category", "websiteid", "weblogid", "varchar(48) not null")
#renameColumn("weblog_entry", "websiteid", "weblogid", "varchar(48) not null")
#renameColumn("roller_weblogentrytag", "websiteid", "weblogid", "varchar(48) not null")
#renameColumn("roller_weblogentrytagagg", "websiteid", "weblogid", "varchar(48) not null")
#renameColumn("roller_weblogentrytag", "websiteid", "weblogid", "varchar(48) not null")
#renameColumn("media_filedir", "websiteid", "weblogid", "varchar(48) not null")

-- Media File revamp
#dropColumn("media_directory", "description")
#dropColumn("media_file", "copyright_text")
#dropColumn("media_file", "is_public")
#dropColumn("media_file", "weblogid")
#renameColumn("media_file", "description", "notes", "varchar(255)")
#addColumnNull("media_file" "alt_attr"  "varchar(255)")
#addColumnNull("media_file" "title_attr"  "varchar(255)")

-- AtomPub gone

#dropTableIfExists("roller_oauthconsumer")
#dropTableIfExists("roller_oauthaccessor")

-- Pinging now handled in-memory

#dropTableIfExists("pingqueueentry")

-- Task scheduling now handled by Spring (see spring.xml)

#dropTableIfExists("roller_tasklock")

-- No more media file tags

#dropTableIfExists("roller_mediafiletag")

-- enable multilangs, show all langs removed from weblog

#dropColumn("weblog", "enablemultilang")
#dropColumn("weblog", "showalllangs")
#dropColumn("weblog", "enablebloggerapi")
#dropColumn("weblog", "bloggercatid")

#dropIndex("weblog_entry", "we_locale_idx")
#dropColumn("weblog_entry", "locale")


-- bookmark folders removed

#dropForeignKey("blogroll_link" "bm_folderid_fk")
#dropIndex("blogroll_link", "bm_folderid_idx")
#dropColumn("blogroll_link", "feedurl")
#dropColumn("blogroll_link", "image")
#addColumnNull("blogroll_link" "weblogid" "varchar48")
#renameColumn("blogroll_link", "priority", "position", "integer not null")
update bookmark bm set weblogid = select websiteid from bookmark_folder bf where bf.id = bm.folderid;

#dropColumn("blogroll_link", "folderid")
#dropTableIfExists("bookmark_folder")
alter table bookmark add constraint bm_weblogid_fk foreign key ( weblogid ) references weblog( id ) ;

-- entry attributes moved into weblogentry table
#dropColumn("weblog_entry", "content_type")
#dropColumn("weblog_entry", "content_src")
#addColumnNull("weblog_entry" "enclosure_url" "varchar(255)")
#addColumnNull("weblog_entry" "enclosure_type" "varchar(48)")
#addColumnNull("weblog_entry" "enclosure_length" "integer")

-- weblog entries now have a notes field for the blogger
#addColumnNull("weblog_entry" "notes" "$db.TEXT_SQL_TYPE")
#dropColumn("weblog_entry", "link")

update weblogentry we set enclosure_url =
(select value from entryattribute where name = "att_mediacast_url" and entryid = we.id)
where we.id in
(select entryid from entryattribute where name = "att_mediacast_url")

update weblogentry we set enclosure_type =
(select value from entryattribute where name = "att_mediacast_type" and entryid = we.id)
where we.id in
(select entryid from entryattribute where name = "att_mediacast_type")

update weblogentry we set enclosure_length =
(select value from entryattribute where name = "att_mediacast_length" and entryid = we.id)
where we.id in
(select entryid from entryattribute where name = "att_mediacast_length")


-- Set new global roles from the now-unused userrole table:
update weblogger_user ru
set role = 'BLOGGER'
where ru.username in (select ur.username
from userrole ur
where role = 'editor');

update weblogger_user ru
set role = 'ADMIN'
where ru.username in (select ur.username
from userrole ur
where role = 'admin');

-- Update the weblog roles to the new terminology
update user_weblog_role
set actions = 'OWNER'
where actions = 'admin'

update user_weblog_role
set actions = 'POST'
where actions = 'post'

update user_weblog_role
set actions = 'EDIT_DRAFT'
where actions = 'edit_draft'

-- Roller_Hitcounts moved into Weblog table

#addColumnNotNull("weblog" "hitstoday"  "integer")
#dropTable('roller_hitcounts')


-- planet changes
insert into weblogger_properties select * from rag_properties;
#dropTable('rag_properties')
#dropTable('rag_entry')
#dropTable('rag_group_subscription')
#dropTable('rag_subscription')
#dropTable('rag_group')
#dropTable('rag_planet')

create table planet (
    id               varchar(48) not null primary key,
    handle           varchar(32) not null,
    title            varchar(255) not null,
    description      varchar(255),
    max_page_entries integer default 30,
    max_feed_entries integer default 30,
    cat_restriction  $db.TEXT_SQL_TYPE,
    group_page       varchar(255)
);
alter table planet add constraint planet_handle_uq unique (handle);

create table planet_subscription (
    id               varchar(48) not null primary key,
    planetid         varchar(48) not null,
    title            varchar(255) not null,
    feed_url         varchar(255) not null,
    site_url         varchar(255),
    author           varchar(255),
    last_updated     $db.TIMESTAMP_SQL_TYPE,
    inbound_links    integer default -1,
    inbound_blogs    integer default -1
);
alter table planet_subscription add constraint plsb_feed_url_uq unique (planetid, feed_url);
create index plnt_subs_idx on planet_subscription(planetid);

alter table planet_subscription add constraint ps_planetid_fk
    foreign key (planetid) references planet(id);

create table planet_subscription_entry (
    id               varchar(48) not null primary key,
    subscription_id  varchar(48) not null,
    handle           varchar(255),
    title            varchar(255),
    guid             varchar(255),
    permalink        $db.TEXT_SQL_TYPE not null,
    author           varchar(255),
    content          $db.TEXT_SQL_TYPE,
    categories       $db.TEXT_SQL_TYPE,
    published        $db.TIMESTAMP_SQL_TYPE not null,
    updated          $db.TIMESTAMP_SQL_TYPE
);
create index plntsbent_sid_idx on planet_subscription_entry(subscription_id);

alter table planet_subscription_entry add constraint pse_subscriptionid_fk
    foreign key (subscription_id) references planet_subscription(id);


-- Expanding datetime or timestamp columns
-- Affects only for MySQL, Oracle, PostgreSQL

#**
 PostgreSQL respects original not null attribute.
 **#
#macro(expandTimestamp $tableName $columnName)
#if($db.DBTYPE == "MYSQL")
#alterColumnType($tableName $columnName "datetime(3)")
#elseif ($db.DBTYPE == "ORACLE" || $db.DBTYPE == "HSQLDB")
#alterColumnType($tableName $columnName "timestamp(3)")
#elseif ($db.DBTYPE == "POSTGRESQL")
#alterColumnType($tableName $columnName "timestamp(3) with time zone")
#end
#end

#macro(expandTimestampNotNull $tableName $columnName)
#if($db.DBTYPE == "MYSQL")
#alterColumnType($tableName $columnName "datetime(3) not null")
#elseif ($db.DBTYPE == "ORACLE"|| $db.DBTYPE == "HSQLDB")
#alterColumnType($tableName $columnName "timestamp(3) not null")
#elseif ($db.DBTYPE == "POSTGRESQL")
#alterColumnType($tableName $columnName "timestamp(3) with time zone")
#end
#end

#expandTimestamp("ping_target" "lastsuccess")
#expandTimestampNotNull("weblog_entry_comment" "posttime")
#expandTimestampNotNull("media_file" "date_uploaded")
#expandTimestamp("media_file" "last_updated")
#expandTimestampNotNull("user_weblog_role" "datecreated")
#expandTimestampNotNull("weblogger_user" "datecreated")
#expandTimestampNotNull("weblog_entry_tag" "time")
#expandTimestampNotNull("weblog" "datecreated")
#expandTimestamp("weblog" "lastmodified")
#expandTimestampNotNull("weblog_template" "updatetime")
#expandTimestamp("weblog_entry" "pubtime")
#expandTimestampNotNull("weblog_entry" "updatetime")
