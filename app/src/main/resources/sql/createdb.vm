#** 
createdb.vm: Velocity template that generates vendor-specific database scripts
DON'T RUN THIS, IT'S NOT A DATABASE CREATION SCRIPT!!!
**#
-- Run this script to create the TightBlog database tables in your database.
-- *****************************************************

create table weblogger_user (
    id              varchar(48) not null primary key,
    username        varchar(255) not null,
    passphrase      varchar(255) not null,
    global_role     varchar(16) not null,
    screenname      varchar(255) not null,
    fullname        varchar(255) not null,
    emailaddress    varchar(255) not null,
    activationcode	varchar(48),
    datecreated     $db.TIMESTAMP_SQL_TYPE not null,
    locale          varchar(20),
    timezone        varchar(50),    
    isenabled       $db.BOOLEAN_SQL_TYPE_TRUE not null
);
alter table weblogger_user add constraint wu_username_uq unique (username);

create table weblog (
    id                varchar(48) not null primary key,
    name              varchar(255) not null,
    handle            varchar(255) not null,
    tagline           varchar(255),
    creatorid         varchar(48) not null,
    editorpage        varchar(255),
    allowcomments     $db.BOOLEAN_SQL_TYPE_TRUE not null,
    emailcomments     $db.BOOLEAN_SQL_TYPE_FALSE not null,
    emailaddress      varchar(255) not null,
    editortheme       varchar(255),
    locale            varchar(20),
    timezone          varchar(50),
    defaultplugins    varchar(255),
    visible           $db.BOOLEAN_SQL_TYPE_TRUE not null,
    isactive          $db.BOOLEAN_SQL_TYPE_TRUE not null,
    datecreated          $db.TIMESTAMP_SQL_TYPE not null,
    blacklist            $db.TEXT_SQL_TYPE,
    defaultallowcomments $db.BOOLEAN_SQL_TYPE_TRUE not null,
    defaultcommentdays   integer default 7 not null,
    commentmod           $db.BOOLEAN_SQL_TYPE_FALSE not null,
    displaycnt           integer default 15 not null,
    lastmodified         $db.TIMESTAMP_SQL_TYPE,
    about             varchar(255),
    icon              varchar(255),
    analyticscode      $db.TEXT_SQL_TYPE,
    hitstoday	      integer default 0 not null
);
create index ws_visible_idx on weblog(visible);
alter table weblog add constraint wlog_handle_uq unique (handle);

alter table weblog add constraint wlog_creatorid_fk
    foreign key ( creatorid ) references weblogger_user( id ) ;

create table user_weblog_role (
   id              varchar(48) not null primary key,
   userid          varchar(48) not null,
   weblogid        varchar(48) not null,
   weblog_role     varchar(48) not null,
   pending         $db.BOOLEAN_SQL_TYPE_TRUE not null,
   datecreated     $db.TIMESTAMP_SQL_TYPE not null
);

alter table user_weblog_role add constraint uwr_userid_fk
    foreign key ( userid ) references weblogger_user( id ) ;

alter table user_weblog_role add constraint uwr_weblogid_fk
    foreign key ( weblogid ) references weblog( id ) ;


create table weblog_template (
    id              varchar(48) not null primary key,
    name            varchar(255) not null,
    description     varchar(255),
    link            varchar(255),
    weblogid        varchar(48) not null,
    updatetime      $db.TIMESTAMP_SQL_TYPE not null,
    hidden          $db.BOOLEAN_SQL_TYPE_FALSE not null,
    navbar          $db.BOOLEAN_SQL_TYPE_FALSE not null,
    outputtype      varchar(48) default null,
    #columnNotNullWithDefault('action' 'varchar(16)' 'custom')
);
create index wp_name_idx on weblog_template(name);
create index wp_link_idx on weblog_template(link);

alter table weblog_template add constraint wt_weblogid_fk
    foreign key ( weblogid ) references weblog( id ) ;

alter table weblog_template add constraint wt_name_uq unique (weblogid, name);

#if($db.FOREIGN_KEY_MAKES_INDEX == "false")
    create index wt_weblogid_idx on weblog_template(weblogid);
#end

create table weblog_template_rendition (
    id           varchar(48)  not null primary key,
    templateid   varchar(48) not null,
    template     $db.TEXT_SQL_TYPE not null,
    templatelang varchar(48),
    #columnNotNullWithDefault('type' 'varchar(16)' 'STANDARD')
);

alter table weblog_template_rendition add constraint wtr_templateid_fk
    foreign key ( templateid ) references weblog_template( id ) ;

create table blogroll_link (
    id               varchar(48) not null primary key,
    weblogid         varchar(48) not null,
    name             varchar(255) not null,
    description      varchar(255),
    url              varchar(255) not null,
    position         integer not null
);

alter table blogroll_link add constraint bl_weblogid_fk
    foreign key ( weblogid ) references weblog( id ) ;

#if($db.FOREIGN_KEY_MAKES_INDEX == "false")
    create index bl_weblogid_idx on blogroll_link( weblogid );
#end

create table weblog_category (
    id               varchar(48) not null primary key,
    name             varchar(255) not null,
    weblogid         varchar(48) not null,
    position         integer not null
);

alter table weblog_category add constraint wc_weblogid_fk
    foreign key ( weblogid ) references weblog( id ) ;

#if($db.FOREIGN_KEY_MAKES_INDEX == "false")
    create index wc_weblogid_idx on weblog_category( weblogid );
#end

create table weblog_entry (
    id              varchar(48)  not null primary key,
    anchor          varchar(255)  not null,
    creatorid       varchar(48) not null,
    title           varchar(255)  not null,
    text            $db.TEXT_SQL_TYPE not null,
    pubtime         $db.TIMESTAMP_SQL_TYPE_NULL,
    updatetime      $db.TIMESTAMP_SQL_TYPE     not null,
    weblogid        varchar(48)  not null,
    categoryid      varchar(48)  not null,
    publishentry    $db.BOOLEAN_SQL_TYPE_TRUE not null,
    plugins         varchar(255),
    allowcomments   $db.BOOLEAN_SQL_TYPE_FALSE not null, 
    commentdays     integer default 7 not null,
    rightToLeft     $db.BOOLEAN_SQL_TYPE_FALSE not null,
    pinnedtomain    $db.BOOLEAN_SQL_TYPE_FALSE not null,
    status          varchar(20) not null,
    summary         $db.TEXT_SQL_TYPE,
    notes           $db.TEXT_SQL_TYPE,
    search_description varchar(255),
    enclosure_url   varchar(255),
    enclosure_type  varchar(48),
    enclosure_length integer
);

alter table weblog_entry add constraint we_weblogid_fk
    foreign key ( weblogid ) references weblog( id ) ;
#if($db.FOREIGN_KEY_MAKES_INDEX == "false")
    create index we_weblogid_idx on weblog_entry( weblogid );
#end

alter table weblog_entry add constraint we_categoryid_fk
    foreign key ( categoryid ) references weblog_category( id ) ;
#if($db.FOREIGN_KEY_MAKES_INDEX == "false")
    create index we_categoryid_idx on weblog_entry( categoryid );
#end

alter table weblog_entry add constraint we_creatorid_fk
    foreign key ( creatorid ) references weblogger_user( id ) ;
#if($db.FOREIGN_KEY_MAKES_INDEX == "false")
    create index we_creator_idx on weblog_entry(creatorid);
#end

create index we_pinnedtom_idx on weblog_entry(pinnedtomain);
create index we_status_idx on weblog_entry(status);
create index we_combo1_idx on weblog_entry(status, pubtime, weblogid);
create index we_combo2_idx on weblog_entry(weblogid, pubtime, status);

-- weblogid available via entryid but duplicated for performance purposes
create table weblog_entry_tag (
    id              varchar(48)   not null primary key,
    weblogid        varchar(48)   not null,
    entryid         varchar(48)   not null,
    name            varchar(255)  not null
);

alter table weblog_entry_tag add constraint wtag_entryid_fk
    foreign key ( entryid ) references weblog_entry( id ) ;

-- below index for single-blog tag clouds
create index wtag_tagsearch_idx on weblog_entry_tag( weblogid, name, entryid );
-- if you plan on having a combined tag cloud for all blogs in your system
-- create index wtag_sitetagsearch_idx on weblog_entry_tag( name, entryid );

-- View below should work fine for most installations.  For super-large sites view can be
-- redefined to point to a data warehouse table updated via triggers or a cron job.
create view weblog_entry_tag_agg as
select weblogid, name, count(*) as total
from weblog_entry_tag
group by weblogid, name;

create table weblog_entry_comment (
    id         varchar(48) not null primary key,
    entryid    varchar(48) not null,
    name       varchar(255),
    email      varchar(255),
    url        varchar(255),
    content    $db.TEXT_SQL_TYPE,
    posttime   $db.TIMESTAMP_SQL_TYPE   not null,
    notify     $db.BOOLEAN_SQL_TYPE_FALSE not null,
    remotehost varchar(128),
    referrer   varchar(255),
    useragent  varchar(255),
    status     varchar(20) not null,
    plugins    varchar(255),
    contenttype varchar(128) default 'text/plain' not null
);

alter table weblog_entry_comment add constraint co_entryid_fk
    foreign key ( entryid ) references weblog_entry( id ) ;

#if($db.FOREIGN_KEY_MAKES_INDEX == "false")
    create index co_entryid_idx on weblog_entry_comment( entryid );
#end

create index co_status_idx on weblog_entry_comment( status );

-- Ping Feature Tables
-- name: short descriptive name of the ping target
-- pingurl: URL to receive the ping
-- lastsuccess: last day that a success ping response was received
-- autoenabled: whether all new blogs will have this target enabled by default
create table ping_target (
    id           varchar(48) not null primary key,
    name         varchar(255) not null,
    pingurl      varchar(255) not null,
    lastsuccess  $db.TIMESTAMP_SQL_TYPE,
    autoenabled  $db.BOOLEAN_SQL_TYPE_FALSE not null
);

-- ping targets configured to be pinged for each weblog
create table weblog_ping_target (
    id            varchar(48) not null primary key,
    weblogid      varchar(48) not null,
    pingtargetid  varchar(48) not null 
);

alter table weblog_ping_target add constraint ap_weblogid_fk
    foreign key (weblogid) references weblog(id);

#if($db.FOREIGN_KEY_MAKES_INDEX == "false")
    create index ap_weblogid_idx on weblog_ping_target( weblogid );
#end

alter table weblog_ping_target add constraint ap_pingtargetid_fk
    foreign key (pingtargetid) references ping_target(id);

#if($db.FOREIGN_KEY_MAKES_INDEX == "false")
    create index ap_pingtargetid_idx on weblog_ping_target( pingtargetid );
#end

create table weblogger_properties (
    name     varchar(255) not null primary key,
    value    $db.TEXT_SQL_TYPE
);


-- PLANET FEED AGGREGATOR

create table planet (
    id               varchar(48) not null primary key,
    handle           varchar(32) not null,
    title            varchar(255) not null,
    description      varchar(255),
    max_page_entries integer default 30,
    max_feed_entries integer default 30,
    cat_restriction  $db.TEXT_SQL_TYPE,
    group_page       varchar(255)
);
alter table planet add constraint planet_handle_uq unique (handle);

create table planet_subscription (
    id               varchar(48) not null primary key,
    planetid         varchar(48) not null,
    title            varchar(255) not null,
    feed_url         varchar(255) not null,
    site_url         varchar(255),
    author           varchar(255),
    last_updated     $db.TIMESTAMP_SQL_TYPE,
    inbound_links    integer default -1,
    inbound_blogs    integer default -1
);
alter table planet_subscription add constraint plsb_feed_url_uq unique (planetid, feed_url);

alter table planet_subscription add constraint ps_planetid_fk
    foreign key (planetid) references planet(id);

#if($db.FOREIGN_KEY_MAKES_INDEX == "false")
    create index plnt_subs_idx on planet_subscription(planetid);
#end

create table planet_subscription_entry (
    id               varchar(48) not null primary key,
    subscription_id  varchar(48) not null,
    handle           varchar(255),
    title            varchar(255),
    guid             varchar(255),
    permalink        $db.TEXT_SQL_TYPE not null,
    author           varchar(255),
    content          $db.TEXT_SQL_TYPE,
    categories       $db.TEXT_SQL_TYPE,
    published        $db.TIMESTAMP_SQL_TYPE not null,
    updated          $db.TIMESTAMP_SQL_TYPE    
);

alter table planet_subscription_entry add constraint pse_subscriptionid_fk
    foreign key (subscription_id) references planet_subscription(id);

#if($db.FOREIGN_KEY_MAKES_INDEX == "false")
    create index plntsbent_sid_idx on planet_subscription_entry(subscription_id);
#end


-- MEDIA BLOGGING

create table media_directory (
    id               varchar(48) not null primary key,
    name             varchar(255) not null,
    weblogid        varchar(48) not null
);

alter table media_directory add constraint md_weblogid_fk
    foreign key ( weblogid ) references weblog( id ) ;

create table media_file (
    id              varchar(48) not null primary key,
    directoryid     varchar(48) not null,
    name            varchar(255) not null,
    content_type    varchar(50) not null,
    alt_attr        varchar(255),
    title_attr      varchar(255),
    anchor          varchar(255),
    notes           varchar(255),
    width           integer,
    height          integer,
    size_in_bytes   integer,
    creatorid       varchar(48) not null,
    date_uploaded   $db.TIMESTAMP_SQL_TYPE not null,
    last_updated    $db.TIMESTAMP_SQL_TYPE
);

alter table media_file add constraint mf_directoryid_fk
    foreign key (directoryid) references media_directory(id) ;

alter table media_file add constraint mf_creatorid_fk
    foreign key (creatorid) references weblogger_user( id ) ;
